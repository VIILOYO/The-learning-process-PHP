<!-- Классы и объекты -->
<title>Обучение PHP 5</title>
<?php
// requier_once - позволяет включать файл всего 1 раз, во избежания ошибок
require_once '5dop.php';
// Второе подключение игнорируется
require_once '5dop.php';

echo '<h4>Классы и объекты</h4>';

// Класс создается командой class (правила написания класса как в python)
// Имена классов должны быть уникальны и понятны
class SomePeople {
    // Переменные внутри класса - переменные класса
    public $age; // public используется для задания области видимости переменной
    public $name; // к переменной public можно обращаться из вне
    /* 
        public, private, protected - спецификаторы доступа
        public - можно обращаться внутри класса и из вне;
        private - можно обращаться только внутри класса;
        protected - используется при наследовании.
    */
}

// Для создания объекта класса используется команда |new Название_класса|
$nick = new SomePeople; // Тип данных объект
echo gettype($nick) . '<br>';

/* Обращение к переменным объекта происходить через символ '->'
переменные объекта записываются без знака доллар*/  
$nick->age = 15;
$nick->name = 'Никита';
echo 'Меня зовут ' . $nick->name . ' и мне ' . $nick->age . ' лет.';

// При создании объекта можно указывать скобки (в них в будущем будут идти параметры)
$dasha = new SomePeople();
$dasha->age=21; // Необязательно указывать все переменные
echo $dasha->name; // Ошибку не вызовет, но и не вернет ничего

// Объект класса все ещё является переменной, которую можно переписать
$nick = true;
echo '<br>' . $nick;
// Объект класса можно удалить как и переменную
unset($dasha); // Удаление переменной (объекта)
echo $dasha; // Ошибка, переменная не найдена

$home = new SomeHouse();
$home->country = 'Russia';
$home->city = 'Kemerovo';
$home->number = 70;

$andrey = new SomePeople();
$andrey->age = 41;

echo '<br>' . $home->number - $andrey->age; // Просто вычитание чисел из классов

// Спецификаторы доступа
class Location {
    public $x;
    private $y;
    protected $z;
}

$loc = new Location();
$loc->x = 12.5; // Ошибки нет
//$loc->y = 21.1; // Ошибка выдается так как переменная приватна
//$loc->z = 0.25; // Ошибка по причине protected

echo '<h4>Немного о наследованни:</h4>';

// Наследование происходит за счет оператора extends 
class Local extends Location {
    protected $z = 0.02; // Можно переопределить
}

$local2 = new Local();
$local2->x = 12;
$local2->y = -25.1;
//$local2->z = 1.1;

echo $local2->x . ' ' . $local2->y; // При попотыки вывести переменную z выдается ошибка
