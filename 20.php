<!-- Функции работы с массивами -->
<title>Обучение PHP 20</title>

<?php
// Слияние массивов +
echo '<h4>Слияние массивов (ператор +)</h4>';

$arr1 = ['my', 'text'];
$arr2 = ['two', 'one'];

$arr3 = $arr1 + $arr2;
// При одинаковых индексах в массив попадают элементы первойго массива ($arr1)
echo '<pre>'; print_r($arr3); echo '</pre><hr>';

$arr2 = [2 => 'two', 3 => 'one'];
$arr3 = $arr1 + $arr2; // Всё сработает успешно

echo '<pre>'; print_r($arr3); echo '</pre><hr>';

$arr1 = [1, 3];
$arr2 = [5, 7, 9];

$arr3 = $arr1 + $arr2; // Содержит элементы с индесом 0,1 от $arr1 и 2 от $arr2;
echo '<pre>'; print_r($arr3); echo '</pre><hr>';

// Слияние массивов array_merge()
echo '<h4>Слияние массивов (функция array_merge())</h4>';

$arr1 = ['some', 'text'];
$arr2 = ['another', 'words'];
$arr3 = [1 ,5];

$arr4 = array_merge($arr1, $arr2, $arr3); // Сложит все массивы в один
echo '<pre>'; print_r($arr4); echo '</pre><hr>';

// Сравнение массивов
echo '<h4>Сравнение массивов</h4>';

$arr1 = [1, 2, 7, 9, 12];
$arr2 = [1, 2, 7, 9, '12'];
$arr3 = [1, 2, 7, 9];
$arr4 = [1, 2, 5, 9, 25];

// Сравнение равенства == 
// Полное сходство без учета типа данных

if ($arr1 == $arr2) { // Равны
    echo 'Массивы равны<br>';
}else {
    echo 'Массивы не равны<br>';
}

if ($arr1 == $arr3) { // Не равны
    echo 'Массивы равны<br>';
}else {
    echo 'Массивы не равны<br>';
}

if ($arr1 == $arr4) { // Не равны
    echo 'Массивы равны<br>';
}else {
    echo 'Массивы не равны<br>';
}

// Сравнение жесткого равенства ===
// Полное сходство с учетом типа данных

if ($arr1 === $arr2) { // Не равны
    echo 'Массивы равны<br>';
}else {
    echo 'Массивы не равны<br>';
}

// Сравнение на > < 
// Происходит сравнение длины массивов

if ($arr4 > $arr1) { // Неверно
    echo '$arr4 > $arr1<br>';
}else {
    echo '$arr4 не > $arr1<br>';
}

if ($arr4 > $arr3) { // Верно
    echo '$arr4 > $arr3<br>';
}else {
    echo '$arr4 не > $arr3<br>';
}
echo '<hr>';

// Проверка на существование массива isset()
echo '<h4>Проверка на существование массива isset()</h4>';

$arr1 = ['я', 'существую', '?'];
$arr2 = [4, 5];
$arr3 = array_merge($arr1, $arr2);

for ($i=0; $i <= count($arr3) ; $i++) {
    if (isset($arr3[$i])) {
        echo "Элемент массива \$arr3[$i] существует и равен $arr3[$i] <br>";
    }else {
        echo "Элемент массива \$arr3[$i] не существует<br>";
    }
}
echo '<hr>';

// Проверка на существование массива is_array()
echo '<h4>Проверка на существование массива is_array()</h4>';

// Проверяет, является ли переменная массивом
var_dump(is_array($arr3)); // true
echo '<hr>';

// Проверка значение массива на совпадение in_array()
echo '<h4>Проверка значение массива на совпадение in_array()</h4>';

$a = mt_rand(0, 10); // Переменная равна случайному числу от 0 до 10

for ($i=0; $i<5; $i++) {
    $arr1[$i] = mt_rand(0, 10); // Создание массива с 5 случайными числами от 0 до 10
}

echo 'Массив $arr1<pre>'; print_r($arr1); echo '</pre>'; 

// Проверка наличия переменной $a в массиве $arr1 не смотря на тип данных (==)
// Третий параметр позволяет искать с учетом типа данных (true ===, false ==)
if (in_array($a, $arr1, true)) { // $a - может быть строкой или числом и т.д. $arr1 - массив для поиска
    echo "$a находится в массиве \$arr1";
}else {
    echo "$a не находится в массиве \$arr1";
}
echo '<hr>';

// Проверка ключа массива на совпадение array_key_exists()
echo '<h4>Проверка ключа массива на совпадение array_key_exists()</h4>';
// Функция аналогична in_array только с ключами

$arr1 = ['one' => 1, 'two' => 2, 'three' => 3];
$a = 'two';

echo 'Массив $arr1<pre>'; print_r($arr1); echo '</pre>'; 

if (array_key_exists($a, $arr1)) { // Проверяет наличие ключа
    echo "$a является ключом в массиве \$arr1";
}else {
    echo "$a не является ключом в массиве \$arr1";
}

echo '<hr>';
// Удаление элемента массива
echo '<h4>Удаление элемента массива unset()</h4>';

$arr = [1, 2, 5 ,7];
var_dump(is_array($arr));
echo '<br>';

unset($arr); // Удаление массива
var_dump(is_array($arr)); // false
echo '<br>';

$array = [2, 5, 16, 126, 7];
echo '<pre>'; print_r($array); echo '</pre>'; 

echo '<hr>';

unset($array[0]); // Удаление массива
echo '<pre>'; print_r($array); echo '</pre><hr>'; // Индексы не сдвинутся, а останутся на своих местах

// Задание 1
echo '<h4>Задание 1</h4>';
echo '<p>Создайте массив на 6 элементов. Выведите случайный элемент массива.</p>';

$arr_6 = [mt_rand(0, 12), mt_rand(0, 12), mt_rand(0, 12), mt_rand(0, 12), mt_rand(0, 12), mt_rand(0, 12)];
echo '<pre>'; print_r($arr_6); echo'</pre>';

$a = mt_rand(0, count($arr_6)-1);
echo "$a элемет массива \$arr_6 - $arr_6[$a]<hr>";

// Задание 2
echo '<h4>Задание 2</h4>';
echo '<p>
    Создайте массив с числами от 0 до 20. Проверяя каждое число, 
    если оно без остатка от деления на 2, тогда его добавляем в новый массив
</p>';

for ($i=0; $i<21; $i++) { 
    $arr[$i] = $i;
}

$i = 0;
foreach ($arr as $a) {
    if ($a%2 == 0) {
        $arr_even[$i] = $a; // Можно использовать array_push()
        $i++; 
    }
}

echo '<pre>'; print_r($arr_even); echo'</pre><hr>';

// Задание 3
echo '<h4>Задание 3</h4>';
echo '<p>
    *Создайте текстовый файл с названиями месяцев. В документации РНР найдите функцию file(), 
    изучите приемы ее использования и создайте массив с названиями месяцев из 
    содержимого текстового файла.  
</p>';

$arr_file = file('20.txt'); // Создает массив из строк текстового файла
echo '<pre>'; print_r($arr_file); echo'</pre><hr>';

// Задание 4
echo '<h4>Задание 4</h4>';
echo '<p>
    **Создайте массив со случайным количеством элементов от 5 до 10, 
    элементы которого принимают случайное значение от 0 до 100. Отсортируйте 
    элементы массива в порядке от наименьших к наибольшим значениям.
</p>';

$arr_rand = [];
while (true) {
    if (count($arr_rand)<5) {
        array_push($arr_rand, mt_rand(0, 100));
    }elseif (count($arr_rand)<10 && mt_rand(0, 5) > 1) { // Рандомизация количества элементов
        array_push($arr_rand, mt_rand(0, 100));
    }else {
        break;
    }
}

asort($arr_rand); // Сортирует массив по возрастанию
echo '<pre>'; print_r($arr_rand); echo'</pre><hr>';
